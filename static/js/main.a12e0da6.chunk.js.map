{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/covid19_logo.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","console","log","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","seperator","Date","toLocaleDateString","toLocaleTimeString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgorundColor","barChart","backgroundColor","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a12e0da6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2OKt-\",\"card\":\"Cards_card__wk6B7\",\"infected\":\"Cards_infected__1zAYo\",\"recovered\":\"Cards_recovered__3s7U9\",\"deaths\":\"Cards_deaths__3ZxV2\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ( {data :{ confirmed, recovered, deaths, lastUpdate } }) => {\r\n    console.log(confirmed);\r\n    if(!confirmed){\r\n        return 'No data found...';\r\n    }\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n        <Grid container spacing={3} justify = \"center\">\r\n            <Grid item component={Card} xs={11}  md={3} className={cx(styles.card, styles.infected)}>\r\n                <CardContent >\r\n                    <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                    <Typography variant=\"h5\">\r\n                        <CountUp start = {0} end = {confirmed.value} duration = {1} seperator = \",\" />\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">Number of active cases of Corona Virus</Typography>\r\n                    <Typography color=\"textSecondary\">{'Last Updated: '}{new Date(lastUpdate).toLocaleDateString('en-IN')}{' '}{new Date(lastUpdate).toLocaleTimeString('en-IN')}</Typography> \r\n                </CardContent>\r\n            </Grid>\r\n            <Grid item component={Card} xs={11}  md={3} className={cx(styles.card, styles.recovered)}>\r\n                <CardContent >\r\n                    <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                    <Typography variant=\"h5\">\r\n                        <CountUp start = {0} end = {recovered.value} duration = {1} seperator = \",\" />\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">Number of recoveries from Corona Virus</Typography>\r\n                    <Typography color=\"textSecondary\">{'Last Updated: '}{new Date(lastUpdate).toLocaleDateString('en-IN')}{' '}{new Date(lastUpdate).toLocaleTimeString('en-IN')}</Typography>     \r\n                </CardContent>\r\n            </Grid>\r\n            <Grid item component={Card} xs={11}  md={3} className={cx(styles.card, styles.deaths)}>\r\n                <CardContent >\r\n                    <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                    <Typography variant=\"h5\">\r\n                        <CountUp start = {0} end = {deaths.value} duration = {1} seperator = \",\" />\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">Number of deaths caused by Corona Virus</Typography>\r\n                    <Typography color=\"textSecondary\">{'Last Updated: '}{new Date(lastUpdate).toLocaleDateString('en-IN')}{' '}{new Date(lastUpdate).toLocaleTimeString('en-IN')}</Typography>\r\n                </CardContent>\r\n            </Grid>\r\n        </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cards; ","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url;\r\n\r\n    if(country){\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n\r\n    try{\r\n        const { data : { confirmed, recovered, deaths, lastUpdate } }= await axios.get(changeableUrl);\r\n\r\n\r\n        return { confirmed ,recovered ,deaths ,lastUpdate };\r\n    } catch(error){\r\n\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () =>{\r\n\r\n\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n\r\n        const modifiedData = data.map((dailyData)=>({\r\n            confirmed : dailyData.confirmed.total,\r\n            deaths : dailyData.deaths.total,\r\n            date : dailyData.reportDate,\r\n        }));\r\n\r\n        return modifiedData;\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data : { countries }} = await axios.get(`${url}/countries`);\r\n        return countries.map((country) => country.name);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n\r\n\r\nconst Chart = ({data :{ confirmed, recovered, deaths}, country }) => {\r\n    const [ dailyData, setDailyData ] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async() => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n\r\n        \r\n        fetchAPI();\r\n    });\r\n\r\n    \r\n    const lineChart = (\r\n        dailyData.length\r\n        ?(\r\n        <Line\r\n            data = {{\r\n                labels : dailyData.map(({date}) => date ),\r\n                datasets: [{\r\n                    data : dailyData.map(({confirmed}) => confirmed),\r\n                    label : 'Infected',\r\n                    borderColor : '#3333ff',\r\n                    fill : true,\r\n                },{\r\n                    data : dailyData.map(({deaths}) =>  deaths),\r\n                    label : 'Deaths',\r\n                    borderColor : 'red',\r\n                    backgorundColor : 'rgba(255,0,0,0.5)',\r\n                    fill : true,\r\n                }],\r\n            }}\r\n        />) : null\r\n    );\r\n\r\n    const barChart = (\r\n        confirmed\r\n        ?(\r\n            <Bar\r\n                data = {{\r\n                    labels: ['Infected', 'Recovered', 'Deaths'],\r\n                    datasets: [{\r\n                        label: 'People',\r\n                        backgroundColor: ['rgb(0, 0, 255, 0.5)','rgb(0, 255, 0, 0.5)', 'rgb(255, 0, 0, 0.5)'],\r\n                        data : [confirmed.value, recovered.value, deaths.value],\r\n                    }]\r\n                }}\r\n                options = {{\r\n                    legend : {display: false},\r\n                    title : {display: true, text: `Current cases in ${country}`},\r\n                   \r\n                }}\r\n\r\n            />\r\n        ) : null\r\n\r\n    ); \r\n\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chart;","import React,{ useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl} from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ( {handleCountryChange}) => {\r\n\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n\r\n        fetchAPI();\r\n    }, [setFetchedCountries]);\r\n\r\n    \r\n    return(\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue = \"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country, i) => <option key={i} value={country} >{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\n\r\n//import Cards from './components/Cards/Cards';\r\n//import Chart from './components/Chart/Chart';\r\n//import CountryPicker from './components/CountryPicker/CountryPicker';\r\n\r\nimport { Cards, Chart, CountryPicker } from './components'; \r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\n\r\nimport coronaImage from './images/covid19_logo.png';\r\n\r\nclass App extends React.Component{\r\n    \r\n    state = {\r\n        data : {}, \r\n        country : '',\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const fetchedData = await fetchData();\r\n        this.setState({data : fetchedData});\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const fetchedData = await fetchData(country);\r\n\r\n        this.setState({data : fetchedData , country : country });\r\n        \r\n    }\r\n\r\n    render() {\r\n\r\n        const { data, country } = this.state;\r\n\r\n        return(\r\n            <div className={styles.container}>\r\n                <img className={styles.image} src = {coronaImage} alt='COVID-19 CORONA VIRUS'/>\r\n                <Cards data = {data} />\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Chart data ={data} country = {country}/>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__28zhJ\",\"image\":\"App_image__1VGlj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__20BZT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2hb7x\"};","module.exports = __webpack_public_path__ + \"static/media/covid19_logo.6ce9074d.png\";"],"sourceRoot":""}